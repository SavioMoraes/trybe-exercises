// Utilizado para adicionar colunas a uma coleção, no aggregation pipeline!

use('agg_example');
db.scores.insertMany([
  {
    _id: 1,
    student: "Maya",
    homework: [10, 5, 10],
    quiz: [10, 8],
    extraCredit: 0
  },
  {
    _id: 2,
    student: "Ryan",
    homework: [5, 6, 5],
    quiz: [8, 8],
    extraCredit: 8
  }
]);

/* A operação de agregação abaixo utiliza o $addFields duas vezes para incluir três novos campos nos documentos de saída: */
use('agg_example');
db.scores.aggregate([
  {
    $addFields: {
      totalHomework: { $sum: "$homework" } ,
      totalQuiz: { $sum: "$quiz" }
    }
  },
  {
    $addFields: {
      totalScore: {
        $add: [ "$totalHomework", "$totalQuiz", "$extraCredit" ]
      }
    }
  }
]);

/* Para Fixar:
* Utilizando o banco de dados storage , faça o seguinte exercício:
* 1. Calcule o valor total do estoque, considerando que cada produto valha o mesmo que seu preço de venda. Lembre-se da quantidade. */
use('storage');
db.products.aggregate([
  {
    $addFields: {
      stock_total_value: {
        $multiply: ["$sale_price", "$quantity"]
      }
    }
  }
]);
